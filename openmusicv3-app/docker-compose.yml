services:
  openmusic-app:
    build: .
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - HOST=0.0.0.0
      - PORT=5000
      - PGUSER=openmusic
      - PGPASSWORD=openmusicpassword
      - PGDATABASE=openmusicv3
      - PGHOST=postgres
      - PGPORT=5432
      - ACCESS_TOKEN_KEY=youraccesstokenkey
      - REFRESH_TOKEN_KEY=yourrefreshtokenkey
      - ACCESS_TOKEN_AGE=1800
      - RABBITMQ_SERVER=amqp://admin:password@rabbitmq
      - REDIS_SERVER=redis
      - STORAGE_PROVIDER=minio # optional, default is 'aws'
      - AWS_ACCESS_KEY_ID=fNzU3XkKl82PwSVwWDvQ
      - AWS_SECRET_ACCESS_KEY=z1tDvMlItRLBdIswT14udND12NgQzOUJ99RxUd3v
      - AWS_REGION=ap-southeast-1
      - AWS_BUCKET_NAME=openmusic-app
      - AWS_ENDPOINT=https://cdn.hamdiv.me # optional, for MINIO or custom S3 provider only!
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - openmusic-network
      
  postgres:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=openmusic
      - POSTGRES_PASSWORD=openmusicpassword
      - POSTGRES_DB=openmusicv3
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - openmusic-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - openmusic-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "15672:15672" 
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - openmusic-network

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:

networks:
  openmusic-network:
    driver: bridge
